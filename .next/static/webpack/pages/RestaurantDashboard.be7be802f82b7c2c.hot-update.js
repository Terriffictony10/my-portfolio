"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/RestaurantDashboard",{

/***/ "./src/store/interactions.js":
/*!***********************************!*\
  !*** ./src/store/interactions.js ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNewRestaurant: function() { return /* binding */ createNewRestaurant; },\n/* harmony export */   decorateMyRestaurants: function() { return /* binding */ decorateMyRestaurants; },\n/* harmony export */   loadAccount: function() { return /* binding */ loadAccount; },\n/* harmony export */   loadAllRestaurants: function() { return /* binding */ loadAllRestaurants; },\n/* harmony export */   loadFactory: function() { return /* binding */ loadFactory; },\n/* harmony export */   loadMyRestaurants: function() { return /* binding */ loadMyRestaurants; },\n/* harmony export */   loadNetwork: function() { return /* binding */ loadNetwork; },\n/* harmony export */   loadProvider: function() { return /* binding */ loadProvider; },\n/* harmony export */   subscribeToEvents: function() { return /* binding */ subscribeToEvents; }\n/* harmony export */ });\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var _abis_Restaurant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../abis/Restaurant */ \"./src/abis/Restaurant.json\");\n/* harmony import */ var _abis_decentratalityServiceFactory_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../abis/decentratalityServiceFactory.json */ \"./src/abis/decentratalityServiceFactory.json\");\n\n\n\n\nlet GlobalRestaurants = [];\nconst loadProvider = async (dispatch)=>{\n    const connection = await new ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.BrowserProvider(window.ethereum);\n    dispatch({\n        type: \"PROVIDER_LOADED\",\n        connection\n    });\n    return connection;\n};\nconst loadAccount = async (provider, dispatch)=>{\n    const accounts = await provider.send(\"eth_requestAccounts\", []);\n    const account = ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.getAddress(accounts[0]);\n    dispatch({\n        type: \"ACCOUNT_LOADED\",\n        account\n    });\n    return account;\n};\nconst loadNetwork = async (provider, dispatch)=>{\n    let { chainId } = await provider.getNetwork();\n    chainId = Number(chainId);\n    dispatch({\n        type: \"NETWORK_LOADED\",\n        chainId\n    });\n    return chainId;\n};\nconst subscribeToEvents = async (restaurantFactory, dispatch)=>{\n    restaurantFactory.on(\"RestaurantCreated\", (id, user, tokenGet, amountGet, tokenGive, amountGive, timestamp, event)=>{\n        const restaurant = event.args;\n        dispatch({\n            type: \"NEW_RESTAURANT_CREATION_SUCCESS\",\n            restaurant,\n            event\n        });\n    });\n};\nconst loadFactory = async (provider, address, dispatch)=>{\n    const user = await provider.getSigner();\n    const decentratalityServiceFactory = new ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.Contract(address, _abis_decentratalityServiceFactory_json__WEBPACK_IMPORTED_MODULE_1__.abi, user);\n    dispatch({\n        type: \"DECENTRATALITY_SERVICE_FACTORY_LOADED\",\n        decentratalityServiceFactory\n    });\n    return decentratalityServiceFactory;\n};\nconst loadAllRestaurants = async (provider, factory, dispatch)=>{\n    let Restaurants, Restaurant, RestaurantsRaw;\n    Restaurant = [];\n    Restaurants = [];\n    const block = await provider.getBlockNumber();\n    const restaurantStream = await factory.queryFilter(\"RestaurantCreated\", 0, block);\n    RestaurantsRaw = restaurantStream.map((event)=>event.args);\n    if (GlobalRestaurants.length == 0) {\n        for(let i = 0; i < RestaurantsRaw.length; i++){\n            let restaurant = RestaurantsRaw[i];\n            for(let key in restaurant){\n                if (typeof restaurant[key] === \"bigint\") {\n                    Restaurant.push(Number(restaurant[key]));\n                } else {\n                    Restaurant.push(restaurant[key]);\n                }\n            }\n            Restaurants.push(Restaurant);\n            Restaurant = [];\n        }\n    }\n    GlobalRestaurants = Restaurants;\n    console.log(GlobalRestaurants.length, Restaurants.length);\n    for(let i = GlobalRestaurants.length; i < Restaurants.length - 1; i++){\n        let restaurant = RestaurantsRaw[i];\n        for(let key in restaurant){\n            if (typeof restaurant[key] === \"bigint\") {\n                Restaurant.push(Number(restaurant[key]));\n            } else {\n                Restaurant.push(restaurant[key]);\n            }\n            Restaurants.push(Restaurant);\n            Restaurant = [];\n        }\n    }\n    GlobalRestaurants = Restaurants;\n    console.log(Restaurants);\n    dispatch({\n        type: \"All_RESTAURANTS_LOADED\",\n        Restaurants\n    });\n    return Restaurants;\n};\nconst loadMyRestaurants = async (provider, user, Restaurants, dispatch)=>{\n    let myRestaurants1 = [];\n    for(let i = 0; i < Restaurants.length; i++){\n        if (Restaurants[i][2] == user) {\n            myRestaurants1.push(Restaurants[i]);\n        }\n    }\n    dispatch({\n        type: \"MY_RESTAURANTS_LOADED\",\n        myRestaurants: myRestaurants1\n    });\n    return myRestaurants1;\n};\nconst decorateMyRestaurants = async (provider, myRestaurants1)=>{\n    const user = await provider.getSigner();\n    for(let i = 0; i < myRestaurants1.length; i++){\n        const contract = await new ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.Contract(myRestaurants1[i][0], _abis_Restaurant__WEBPACK_IMPORTED_MODULE_0__.abi, user);\n        myRestaurants1[i].name = await contract.name();\n        myRestaurants1[i].cash = await provider.getBalance(contract.target);\n    }\n    return myRestaurants1;\n};\nconst createNewRestaurant = async (provider, factory, restaurantName, restaurantLiquidity, dispatch)=>{\n    let newRestaurant;\n    const user = await provider.getSigner();\n    const balance = await provider.getBalance(user);\n    try {\n        if (Number(balance) >= restaurantLiquidity) {\n            newRestaurant = await factory.createRestaurant(restaurantName, restaurantLiquidity, {\n                value: restaurantLiquidity\n            });\n            dispatch({\n                type: \"RESTAURANT_CREATION_REQUEST\",\n                myRestaurants\n            });\n        } else {\n            console.log(\"welp\");\n        }\n    } catch (error) {\n        dispatch({\n            type: \"RESTAURANT_CREATION_FAIL\"\n        });\n    }\n    return newRestaurant;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/store/interactions.js\n"));

/***/ })

});