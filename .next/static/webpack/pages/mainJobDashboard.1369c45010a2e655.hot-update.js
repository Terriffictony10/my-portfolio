"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/mainJobDashboard",{

/***/ "./src/pages/mainJobDashboard.js":
/*!***************************************!*\
  !*** ./src/pages/mainJobDashboard.js ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ handler; }\n/* harmony export */ });\n// pages/api/employeeStatus.js\n// In-memory store: { [employeeAddressOrId]: { isClockedIn, clockInTime } }\nlet employeeStatusDB = {};\n/**\r\n * Example body for POST:\r\n * {\r\n *   \"employeeId\": \"1\",\r\n *   \"isClockedIn\": true,\r\n *   \"clockInTime\": 1674598765432\r\n * }\r\n *\r\n * Example query for GET:\r\n *   GET /api/employeeStatus?employeeId=1\r\n */ function handler(req, res) {\n    const { method } = req;\n    if (method === \"GET\") {\n        const { employeeId } = req.query;\n        if (!employeeId) {\n            return res.status(400).json({\n                error: \"Missing employeeId in query\"\n            });\n        }\n        // Return the stored status if it exists\n        const status = employeeStatusDB[employeeId];\n        if (!status) {\n            return res.status(200).json({\n                isClockedIn: false,\n                clockInTime: null\n            });\n        }\n        return res.status(200).json(status);\n    } else if (method === \"POST\") {\n        const { employeeId, isClockedIn, clockInTime } = req.body;\n        if (!employeeId) {\n            return res.status(400).json({\n                error: \"Missing employeeId in request body\"\n            });\n        }\n        // Update the in-memory store\n        employeeStatusDB[employeeId] = {\n            isClockedIn,\n            clockInTime\n        };\n        return res.status(200).json({\n            success: true,\n            data: employeeStatusDB[employeeId]\n        });\n    } else {\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvbWFpbkpvYkRhc2hib2FyZC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsOEJBQThCO0FBRTlCLDJFQUEyRTtBQUMzRSxJQUFJQSxtQkFBbUIsQ0FBQztBQUV4Qjs7Ozs7Ozs7OztDQVVDLEdBQ2MsU0FBU0MsUUFBUUMsR0FBRyxFQUFFQyxHQUFHO0lBQ3RDLE1BQU0sRUFBRUMsTUFBTSxFQUFFLEdBQUdGO0lBRW5CLElBQUlFLFdBQVcsT0FBTztRQUNwQixNQUFNLEVBQUVDLFVBQVUsRUFBRSxHQUFHSCxJQUFJSSxLQUFLO1FBQ2hDLElBQUksQ0FBQ0QsWUFBWTtZQUNmLE9BQU9GLElBQUlJLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7Z0JBQUVDLE9BQU87WUFBOEI7UUFDckU7UUFFQSx3Q0FBd0M7UUFDeEMsTUFBTUYsU0FBU1AsZ0JBQWdCLENBQUNLLFdBQVc7UUFDM0MsSUFBSSxDQUFDRSxRQUFRO1lBQ1gsT0FBT0osSUFBSUksTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztnQkFBRUUsYUFBYTtnQkFBT0MsYUFBYTtZQUFLO1FBQ3RFO1FBQ0EsT0FBT1IsSUFBSUksTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQ0Q7SUFFOUIsT0FBTyxJQUFJSCxXQUFXLFFBQVE7UUFDNUIsTUFBTSxFQUFFQyxVQUFVLEVBQUVLLFdBQVcsRUFBRUMsV0FBVyxFQUFFLEdBQUdULElBQUlVLElBQUk7UUFDekQsSUFBSSxDQUFDUCxZQUFZO1lBQ2YsT0FBT0YsSUFDSkksTUFBTSxDQUFDLEtBQ1BDLElBQUksQ0FBQztnQkFBRUMsT0FBTztZQUFxQztRQUN4RDtRQUVBLDZCQUE2QjtRQUM3QlQsZ0JBQWdCLENBQUNLLFdBQVcsR0FBRztZQUM3Qks7WUFDQUM7UUFDRjtRQUVBLE9BQU9SLElBQUlJLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFBRUssU0FBUztZQUFNQyxNQUFNZCxnQkFBZ0IsQ0FBQ0ssV0FBVztRQUFDO0lBQ2xGLE9BQU87UUFDTCxPQUFPRixJQUFJSSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQUVDLE9BQU87UUFBcUI7SUFDNUQ7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvcGFnZXMvbWFpbkpvYkRhc2hib2FyZC5qcz81MWEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHBhZ2VzL2FwaS9lbXBsb3llZVN0YXR1cy5qc1xyXG5cclxuLy8gSW4tbWVtb3J5IHN0b3JlOiB7IFtlbXBsb3llZUFkZHJlc3NPcklkXTogeyBpc0Nsb2NrZWRJbiwgY2xvY2tJblRpbWUgfSB9XHJcbmxldCBlbXBsb3llZVN0YXR1c0RCID0ge307XHJcblxyXG4vKipcclxuICogRXhhbXBsZSBib2R5IGZvciBQT1NUOlxyXG4gKiB7XHJcbiAqICAgXCJlbXBsb3llZUlkXCI6IFwiMVwiLFxyXG4gKiAgIFwiaXNDbG9ja2VkSW5cIjogdHJ1ZSxcclxuICogICBcImNsb2NrSW5UaW1lXCI6IDE2NzQ1OTg3NjU0MzJcclxuICogfVxyXG4gKlxyXG4gKiBFeGFtcGxlIHF1ZXJ5IGZvciBHRVQ6XHJcbiAqICAgR0VUIC9hcGkvZW1wbG95ZWVTdGF0dXM/ZW1wbG95ZWVJZD0xXHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBoYW5kbGVyKHJlcSwgcmVzKSB7XHJcbiAgY29uc3QgeyBtZXRob2QgfSA9IHJlcTtcclxuXHJcbiAgaWYgKG1ldGhvZCA9PT0gJ0dFVCcpIHtcclxuICAgIGNvbnN0IHsgZW1wbG95ZWVJZCB9ID0gcmVxLnF1ZXJ5O1xyXG4gICAgaWYgKCFlbXBsb3llZUlkKSB7XHJcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IGVycm9yOiBcIk1pc3NpbmcgZW1wbG95ZWVJZCBpbiBxdWVyeVwiIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFJldHVybiB0aGUgc3RvcmVkIHN0YXR1cyBpZiBpdCBleGlzdHNcclxuICAgIGNvbnN0IHN0YXR1cyA9IGVtcGxveWVlU3RhdHVzREJbZW1wbG95ZWVJZF07XHJcbiAgICBpZiAoIXN0YXR1cykge1xyXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oeyBpc0Nsb2NrZWRJbjogZmFsc2UsIGNsb2NrSW5UaW1lOiBudWxsIH0pO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHN0YXR1cyk7XHJcblxyXG4gIH0gZWxzZSBpZiAobWV0aG9kID09PSAnUE9TVCcpIHtcclxuICAgIGNvbnN0IHsgZW1wbG95ZWVJZCwgaXNDbG9ja2VkSW4sIGNsb2NrSW5UaW1lIH0gPSByZXEuYm9keTtcclxuICAgIGlmICghZW1wbG95ZWVJZCkge1xyXG4gICAgICByZXR1cm4gcmVzXHJcbiAgICAgICAgLnN0YXR1cyg0MDApXHJcbiAgICAgICAgLmpzb24oeyBlcnJvcjogJ01pc3NpbmcgZW1wbG95ZWVJZCBpbiByZXF1ZXN0IGJvZHknIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFVwZGF0ZSB0aGUgaW4tbWVtb3J5IHN0b3JlXHJcbiAgICBlbXBsb3llZVN0YXR1c0RCW2VtcGxveWVlSWRdID0ge1xyXG4gICAgICBpc0Nsb2NrZWRJbixcclxuICAgICAgY2xvY2tJblRpbWUsXHJcbiAgICB9O1xyXG5cclxuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7IHN1Y2Nlc3M6IHRydWUsIGRhdGE6IGVtcGxveWVlU3RhdHVzREJbZW1wbG95ZWVJZF0gfSk7XHJcbiAgfSBlbHNlIHtcclxuICAgIHJldHVybiByZXMuc3RhdHVzKDQwNSkuanNvbih7IGVycm9yOiBcIk1ldGhvZCBub3QgYWxsb3dlZFwiIH0pO1xyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOlsiZW1wbG95ZWVTdGF0dXNEQiIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJtZXRob2QiLCJlbXBsb3llZUlkIiwicXVlcnkiLCJzdGF0dXMiLCJqc29uIiwiZXJyb3IiLCJpc0Nsb2NrZWRJbiIsImNsb2NrSW5UaW1lIiwiYm9keSIsInN1Y2Nlc3MiLCJkYXRhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/pages/mainJobDashboard.js\n"));

/***/ })

});